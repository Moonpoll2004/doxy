import{a as n}from"./vendor.1eaab166.js";function t(){return document.querySelector("#app")}function s(){let n={},t=window.location.search.replace("?","").split("&");for(const i of t){var[s,e]=i.split("=");n[s]=e}return n.type?n.type:"api"}function e(n,t){let s="file=".concat(n),e="type=".concat(t),i="/?".concat(s,"&",e);window.location.replace(i)}async function i(){return(await n.get("/".concat(function(){let n={},t=window.location.search.replace("?","").split("&");for(const i of t){var[s,e]=i.split("=");n[s]=e}return n.file?n.file:"docy.json"}()))).data}function c(n){this.source=n,this.endpoints=[];let s=function(n){let t="";return 0===Object.entries(n).length?t='<div class="notification is-dark">No data</div>':Object.entries(n).forEach((n=>{t=t.concat(`<li class="mt-4">\n                <span class="tag is-success">\n                    ${n[0]||"none"}\n                </span>\n                :\n                <span class="tag is-link">\n                    ${n[1]||"none"}\n                </span>\n            </li>`)})),t};this.tamplate=function(n,t,e,i,c,a){return`\n        <div class="container notification mt-4">\n        <hr>\n            <div class="mb-4">\n                <span class="${function(n){const t="tag ";switch(n){case"GET":return t.concat("is-primary");case"POST":return t.concat("is-warning");case"DELETE":return t.concat("is-danger");default:return t.concat("is-primary")}}(t)}">${t}</span>\n                <span>${n}</span>\n            </div>\n            <div class="columns">\n                <div class="column">\n                    <p class="subtitle">body</p>\n                    ${s(e)}\n                </div>\n\n                <div class="column">\n                    <p class="subtitle">query</p>\n                    ${s(i)}\n                </div>\n\n                <div class="column">\n                    <p class="subtitle">cookies</p>\n                    ${s(c)}\n                </div>\n            </div>\n\n            <div class="container notification">\n                ${a}\n            </div>\n        </div>\n        `},this.mapEndpoints=function(n){n.forEach((n=>{t().innerHTML+=this.tamplate(n.path,n.method,n.body,n.query,n.cookies,n.disc)}))}}!function(){const n=document.createElement("link").relList;if(!(n&&n.supports&&n.supports("modulepreload"))){for(const n of document.querySelectorAll('link[rel="modulepreload"]'))t(n);new MutationObserver((n=>{for(const s of n)if("childList"===s.type)for(const n of s.addedNodes)"LINK"===n.tagName&&"modulepreload"===n.rel&&t(n)})).observe(document,{childList:!0,subtree:!0})}function t(n){if(n.ep)return;n.ep=!0;const t=function(n){const t={};return n.integrity&&(t.integrity=n.integrity),n.referrerpolicy&&(t.referrerPolicy=n.referrerpolicy),"use-credentials"===n.crossorigin?t.credentials="include":"anonymous"===n.crossorigin?t.credentials="omit":t.credentials="same-origin",t}(n);fetch(n.href,t)}}();function a(){this.template=function(n,t,s,e){return`\n            <div class="mt-4">\n                <hr>\n                <div class="container is-max-desktop">\n                    <div>\n                        <div class="mt-2">\n                        <span>topic: </span>\n                        <span class="${function(n){const t="tag ";switch(n){case"dmg":return t.concat("is-danger");case"$workspace":case"$workspaceId":return t.concat("is-info");default:return t}}(n)}">${n}</span>\n                        </div>\n                        <div class="mt-2">\n                            <span>\n                            command:\n                            <span class="tag is-primary is-inverted">${t}</span>\n                            </span>\n                        </div>\n                       \n                    </div>\n                    <div class="columns">\n                        <div class="mt-3 column notification">\n                            <p class="subtitle">data</p>\n                            <ul>\n                                ${function(n){let t="",s={};return s=0===Object.entries(n).length?{none:"none"}:n,Object.entries(s).forEach((n=>{t=t.concat(`<li class="mt-4">\n            <span class="tag is-warning">\n                ${n[0]||"none"}\n            </span>\n            :\n            <span class="tag is-danger is-inverted">\n                ${n[1]||"none"}\n            </span>\n        </li>`)})),t}(s)}\n                            </ul>\n                        </div>\n                        <div class="column">\n                        <article class="message is-dark">\n                        <div class="message-header">\n                          <p>Discription</p>\n                        </div>\n                        <div class="message-body">\n                            ${e}\n                        </div>\n                      </article>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `}}!async function(){try{const n=new c(""),o=new a,r=await i();"api"===s()?r.forEach((s=>{t().innerHTML+=n.tamplate(s.path,s.method,s.body,s.query,s.cookies,s.disc)})):r.forEach((n=>{t().innerHTML+=o.template(n.topic,n.cmd,n.data,n.disc)})),function(){const n=document.getElementById("chbtn"),t=s();n.addEventListener("click",(s=>{"api"===t?(n.innerText="View mqtt Docs",e("docy-mqtt.json","mqtt")):(n.innerText="View api Docs",e("docy.json","api"))}))}()}catch(n){console.error(n)}}();
